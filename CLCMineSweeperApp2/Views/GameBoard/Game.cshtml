@model CLCMinesweeperApp.Models.Board


@{
    ViewBag.Title = "Index";

}




<style>
    body {
        font-family: Arial, Helvetica, sans-serif;
    }

    * {
        box-sizing: border-box;
    }

    input[type=text], input[type=number], select, textarea {
        width: 100%;
        padding: 12px;
        border: 1px solid #ccc;
        border-radius: 4px;
        box-sizing: border-box;
        margin-top: 6px;
        margin-bottom: 16px;
        resize: vertical;
    }

    input[type=submit] {
        background-color: #4CAF50;
        color: white;
        padding: 12px 20px;
        border: none;
        border-radius: 4px;
        cursor: pointer;
    }

        input[type=submit]:hover {
            background-color: #45a049;
        }

    .container {
        border-radius: 5px;
        background-color: #ecf0e9;
        padding: 20px;
    }

    .nav-header {
        background-color: #21401f;
        color: white;
    }

    .container signin {
        padding: 16px;
        background-color: white;
    }
</style>
<!DOCTYPE html>

<html>
<head>

    <script src="~/Scripts/jquery-3.5.1.min.js"></script>
    <meta name="viewport" content="width=device-width" />
    <title>GameBoard</title>
    <style>
        .game-button {
            background-color: lightblue;
            border: none;
            width: 50px;
            height: 50px;
            text-align: center;
            font-weight: bold;
            font-size: 16px;
            margin: 4px 2px
        }

        .image {
            width: 30px;
            height: 30px
        }
    </style>

    <script>
        var timeElapsed = 0;
        var timerID = -1;
        function tick() {
            timeElapsed++
            document.getElementById("time").innerHTML = timeElapsed;
        }
        function start() {
            if (timerID == -1) {
                timerID = setInterval(tick, 1000);
            }
        }
        function stop() {
            if (timerID != -1) {
                clearInterval(timerID);
                timerID = -1;
            }
        }
        function reset() {
            stop();
            timeElapsed = -1;
            tick();
        }
    </script>


    <script>
        var count = (function () {

            var counter = 0;
            return function () { return counter += 1; }

        })();

        function upDateClicks() {
            document.getElementById("clickCounter").innerHTML = count();
        }

    </script>
</head>
<body>

    <h2 align="center">Welcome and good luck!</h2>
    <div>
        @{string stats = ""; }


        Seconds: <span id="time">0</span><br />
        <div>
            <p id="clickCounter">

            </p>


        </div>




        @using (Html.BeginForm("SaveGame", "GameBoard", FormMethod.Post, new { id = "signupform" }))
        {
            <input type="hidden" id="Value" name="Value" value="foo" />
            <button name="SaveGameBtn" onclick="myfunc()" type="submit">Save Game</button>
            <script>
                function myfunc() {
                    var time = document.getElementById("time").innerHTML;
                    var clicks = document.getElementById("clickCounter").innerHTML;
                    var stats = time + "|" + clicks;
                    document.getElementById("Value").value = stats;
                }
            </script>
        }
    </div>









    <div align="center" id="Gameboard">
        @Html.Partial("~/Views/GameBoard/_GameBoard.cshtml")
    </div>



</body>
</html>


